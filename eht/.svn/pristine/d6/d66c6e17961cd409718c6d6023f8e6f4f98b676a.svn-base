
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<%@ page language="java" contentType="text/html; charset=utf-8" pageEncoding="UTF-8"%>
<%@ page import="com.eht.subject.entity.SubjectEntity"%>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>e划通</title>  
<%@  include file="/webpage/front/include/front_common.jsp" %> 
<style type="text/css">
.ztree li a.level0 {
	width:200px;
	margin-bottom:1px;
	height:32px;
	padding-left:10px;
	padding-top:10px;
	background:url(${webRoot}/webpage/front/images/bg_menu1a.png) repeat-x;
	border:1px #d5d5d5 solid;
	text-decoration:none;
	color:#333;
}
.ztree li a.level0.cur {
	width:200px;
	margin-bottom:1px;
	height:32px;
	padding-left:10px;
	padding-top:10px;
	border:1px #d5d5d5 solid;
	text-decoration:none;
	background:url(${webRoot}/webpage/front/images/bg_menu1b.jpg) repeat-x;
	color: white;
}
.ztree li a.level0 span {
	display: block;
	padding-top:3px;
	font-size:14px;
	font-weight: bold;
	word-spacing: 2px;
}
.ztree li a.level0 span.button {
	float:left;
	margin-left: 10px;
	visibility: visible;
}
.ztree li span.button.switch.level0 {
	display:none;
}

.numb{
	background-color: #5BA6FF;
    color: #FFFFFF;
    float: right;
    height: 20px;
    margin-right: 10px !important;
    margin-top: -17px !important;
    text-align: center;
    width: 21px;
}

.numa{
	background-color: #5B6368;
    color: #FFFFFF;
    float: right;
    height: 20px;
    margin-right: 10px !important;
    margin-top: -17px !important;
    text-align: center;
    width: 21px;
}

.msg_ico_open{
	background:url(${imgPath}/ling1b.png) no-repeat !important;
	margin-right:5px !important; 
	width:21px !important;
	height:21px !important;
	padding-top:5px !important;
}
.msg_ico_close{
	background:url(${imgPath}/ling1a.png) no-repeat !important;
	margin-right:5px !important; 
	width:21px !important;
	height:21px !important;
	padding-top:6px !important;
}

.psub_ico_open{
	background:url(${imgPath}/icon1b.png) no-repeat !important;
	margin-right:5px !important; 
}
.psub_ico_close{
	background:url(${imgPath}/icon1a.png) no-repeat !important;
	margin-right:5px !important; 
}

.msub_ico_open{
	background:url(${imgPath}/icon1b.png) no-repeat !important;
	margin-right:5px !important; 
}
.msub_ico_close{
	background:url(${imgPath}/icon1a.png) no-repeat !important;
	margin-right:5px !important; 
}

.noread_ico_docu{
	background:url(${imgPath}/dot.png) no-repeat !important;
}

.sys_ico_docu{
	background:url(${imgPath}/dot.png) no-repeat !important;
}

.user_ico_docu{
	background:url(${imgPath}/dot.png) no-repeat !important;
}
</style>
<script type="text/javascript" language="javascript" charset="utf-8">

		var curMenu = null, zTree_Menu = null;
		var treeSetting = {
			edit: {
				enable: true,
				showRemoveBtn: false,
				showRenameBtn: false,
				drag: {
					autoExpandTrigger: false,
					isCopy: false,
					isMove: false,
					prev: true,
					next: true,
					inner: true,
					minMoveSize: 5,
					borderMax: 10,
					borderMin: -5,
					maxShowNodeNum: 5,
					autoOpenTime: 500
				}
			},
			
			view: {
				showLine: false,
				selectedMulti: true,
				dblClickExpand: false,
				nameIsHTML: true
			},
			data: {
				simpleData: {
					enable: false
				},
				key: {
					title: "title"
				}
			},
			callback: {
			    beforeRename:this.zTreeBeforeRename,
				onNodeCreated: this.onNodeCreated,
				beforeClick: this.beforeNodeClick,
				beforeExpand: this.zTreeBeforeExpand,
				onClick: this.onNodeClick,
				onRename: this.nodeOnRename,
				beforeRightClick: this.nodeBeforeRightClick,
				onRightClick: this.nodeOnRightClick
			},
			async : {
			    autoParam : ["id", "dataType", "branchId"],
			    contentType : "application/x-www-form-urlencoded",
			    dataFilter : null,
			    dataType : "text",
			    enable : true,
			    type : "post",
			    url : "${webRoot}/indexController/front/reloadNode.dht"

			}
		};
		//左键点击【我的问的那个】初始化参数
		var  currentSubjectId = null;
		var  currentDirId = null;
		var  currentdirAttachmentURL = "${webRoot}/subjectController/front/dirAttaManage.dht";
		//右键点击的节点
		var rightClickNode = null;
		var rightMenu = null;
		function zTreeBeforeRename(treeId, treeNode, newName){
			if (newName.length > 30) {
				MSG.alert("节点名称长度不能超过30.");
				var yuhaozTree = $.fn.zTree.getZTreeObj("treeMenu");
				setTimeout(function(){yuhaozTree.editName(treeNode)}, 10);
				return false;
			}
		  	if (newName.length == 0) {
				MSG.alert("节点名称不能为空.");
				var yuhaozTree = $.fn.zTree.getZTreeObj("treeMenu");
				setTimeout(function(){yuhaozTree.editName(treeNode)}, 10);
				return false;
			}
			return true;
		}
		
		//展开节点前事件, 移除黑名单中的目录
		function zTreeBeforeExpand(treeId, treeNode) {
			if(treeNode.dataType == 'SUBJECT' || treeNode.dataType == 'DIRECTORY'){   //专题
				var n = isShareSubject(treeNode);
				if(n != null){
					var nodes = treeNode.children;
					var dirIds = [];
					for(var i = 0; i < nodes.length; i++){
						if(nodes[i].dataType == "DIRECTORY" && nodes[i].name != '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
							dirIds[i] = nodes[i].id;
						}
					}
					var params = "dirId=" + dirIds.join(",");
					AT.get("${webRoot}/directoryController/front/blacklist.dht?" + params,function(str){
						if(str != null && $.trim(str) != ""){
							var ids = str.split(",");
							for(var i = 0; i < nodes.length; i++){
								if(nodes[i].dataType == "DIRECTORY" && nodes[i].name != '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
									for(var j = 0; j < nodes.length; j++){
										if(nodes[i].id == ids[j]){
											// 移除在黑名单中的目录
											zTree_Menu.removeNode(nodes[i]);
										}
									}
								}
							}
						}
						return true;
					},false);
				}
			}
			return true;
		}
		// 鼠标注右键点击前, 准备菜单
		function nodeBeforeRightClick(treeId, node){
			if(node.level == 0){
				return false;
			}
			rightClickNode = node;
			var subjectNode = isShareSubject(node);
			// 返回null, 是个人专题
			if(subjectNode == null){
				$("#treeRightMenu").html(rightMenu);
				mouseMenu(treeId, node);
				return true;
			}else{
				var url = "${webRoot}/indexController/front/mouseMenu.dht?subjectId=" + subjectNode.id;
				AT.get(url, function(data){
					$("#treeRightMenu").html(data);
					mouseMenu(treeId, node);
				}, false);
			}
			return true;
		}
		
		function nodeOnRightClick(e, treeId, node){
			//鼠标右键事件
			zTree_Menu.selectNode(node);
		}
		
		//鼠标右键事件
		function mouseMenu(treeId, node){
			var hideObj = null;
			var showId = null;
			if(node.dataType == 'SUBJECT'){   //专题
				hideObj = [$("#treeRightMenu_ul_directory"),$("#treeRightMenu_ul_tag"), $("#treeRightMenu_ul_recycle"), $("#treeRightMenu_ul_recycleRoot"), $("#treeRightMenu_ul_attachment")];
				showId = "treeRightMenu_ul_subject";
			}else if(node.dataType == 'DIRECTORY'){  //目录
				if(rightClickNode.name != '<%=Constants.SUBJECT_RECYCLE_DIRNAME%>' && (node.branchId == 'RECYCLEP' || node.branchId == 'RECYCLE')){  //回收站
					hideObj = [$("#treeRightMenu_ul_subject"),$("#treeRightMenu_ul_directory"), $("#treeRightMenu_ul_tag"), $("#treeRightMenu_ul_recycleRoot"), $("#treeRightMenu_ul_attachment")];
					showId = "treeRightMenu_ul_recycle";
				}else if(isDocumentFolder(rightClickNode)){
					hideObj = [$("#treeRightMenu_ul_subject"),$("#treeRightMenu_ul_directory"), $("#treeRightMenu_ul_tag"), $("#treeRightMenu_ul_recycleRoot"), $("#treeRightMenu_ul_recycle")];
					showId = "treeRightMenu_ul_attachment";
					//文档资料文件夹不能删除,不能重命名
					if(rightClickNode.name == '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
						$("#treeRightMenu_delete_attadir").hide();
						$("#treeRightMenu_rename_attadir").hide();
					}
				}else{
					var params = {'id':node.branchId};
					hideObj = [$("#treeRightMenu_ul_subject"),$("#treeRightMenu_ul_tag"), $("#treeRightMenu_ul_recycle"), $("#treeRightMenu_ul_recycleRoot"), $("#treeRightMenu_ul_attachment")];
					showId = "treeRightMenu_ul_directory";
					$("#"+showId + " #treeRightMenu_black_dir").remove();
					AT.post("${webRoot}/subjectController/front/checkSubjectType.dht",params,function(data){
						if(data.obj==2){
							$("#treeRightMenu_rename_dir").after('<li id=\"treeRightMenu_black_dir\" onclick=\"blackListdir(\''+node.id+'\',\''+node.branchId+'\')\">黑名单设置</li>');
						}
					});
				}
			}else if(node.dataType == 'TAG'){  //标签
				hideObj = [$("#treeRightMenu_ul_subject"),$("#treeRightMenu_ul_directory"), $("#treeRightMenu_ul_recycle"), $("#treeRightMenu_ul_recycleRoot"), $("#treeRightMenu_ul_attachment")];
				showId = "treeRightMenu_ul_tag";
			}else if(node.dataType == 'RECYCLEP' || node.dataType == 'RECYCLE'){
				hideObj = [$("#treeRightMenu_ul_subject"),$("#treeRightMenu_ul_directory"), $("#treeRightMenu_ul_tag"), $("#treeRightMenu_ul_recycle"), $("#treeRightMenu_ul_attachment")];
				showId = "treeRightMenu_ul_recycleRoot";
			}
			
			if(hideObj != null && showId != null){
				for(var i=0;i<hideObj.length;i++){
					hideObj[i].hide();
				}
				//判断控件内是否有菜单存在
				if($("#" + showId + " li") != null && $("#" + showId + " li").length > 0){
					$("#" + showId).show();
					var obj = $("#" + node.tId + "_a");
					var top = obj.offset().top;
					var left = obj.offset().left;
					$("#treeRightMenu").css({position: "absolute",'top':top + 10,'left':left + 60});
					$("#treeRightMenu").show();
				}
			}
			$("body").bind("mousedown", onBodyClick);
		}
		
		//判断是否是“文档资料”或其子目录
		function isDocumentFolder(node){
			if(node.name == '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
				return true;
			}
			var parentNode = node.getParentNode();
			while(parentNode != null){
				if(parentNode.name == '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
					return true;
				}
				parentNode = parentNode.getParentNode();
			}
			return false;
		}
		
		//编辑节点名称前
		function nodeOnRename(e, treeId, node){
			if(node.name == "新目录" || node.name == "新标签" || node.name==""){
				zTree_Menu.removeNode(node);
			}else{
				var parentId = "", subjectId = "";
				var parentNode = node.getParentNode();
				if(parentNode.dataType == "TAG"){  //标签
					if(parentNode.id == 'tag_personal'){  //个人标签
						// parentId和subjectId
					}else if(parentNode.branchId == "tag_personal"){
						parentId = parentNode.id;
					}else if(node.id!=null&&node.id.indexOf('tag_subject')!= -1){ //专题标签
						subjectId = parentNode.branchId;
					}else{
						subjectId = parentNode.branchId;
						parentId = parentNode.id;
					}
					var dataParam = "id=" + node.id + "&name=" + node.name + "&subjectId=" + subjectId + "&parentId=" + parentId;
					var url = "${webRoot}/tagController/front/saveTag.dht";
					AT.post(url, dataParam, function(data){
						if(data.status != 'undefined' && data.status != null && data.status != '' && data.status == 500){
							zTree_Menu.editName(node);
						}else{
							//添加后设置目录节点的ID
							node.id = data.id;
							node.dataType = "TAG";
							node.branchId = data.subjectId;
							node.pId = data.pId;
							var nodename=node.name;
							node.title=nodename;
							if(nodename.length>8){
								nodename=nodename.substring(0,8)+'...';
							}
							node.name=nodename;
							zTree_Menu.updateNode(node);
						}
					}, true);
				}else{
					if(parentNode.dataType == "SUBJECT"){  //父节点为专题
						subjectId = parentNode.id;
					} else if(parentNode.dataType == "DIRECTORY"){  //父节点为目录
						subjectId = parentNode.branchId;
						parentId = parentNode.id;
					}
					
					var dataParam = "id=" + node.id + "&dirName=" + node.name + "&subjectId=" + subjectId + "&parentId=" + parentId;
					var url = "${webRoot}/directoryController/front/saveDirectory.dht";
					AT.post(url, dataParam, function(data){
						if(data != null && data != '' && data == 'false'){
							zTree_Menu.editName(node);
						}else{
							//添加后设置目录节点的ID
							node.id = data.id;
							node.dataType = "DIRECTORY";
							node.branchId = data.subjectId;
							node.subjectId = data.subjectId;							
							node.pId = data.Pid;
						    var nodename=node.name;
							node.title=nodename;
							if(nodename.length>8){
								nodename=nodename.substring(0,8)+'...';
							}
							node.name=nodename;
							zTree_Menu.updateNode(node);
							$("#note_dirId").val(data.id);//检索条目需要的字段
							$("#noteForm_dirId").val(data.id);//添加条目需要的字段
							searchNotes(0);
							$("#noteSubjectName").text(recurParentName(node,""));//修改当前位置
						}
					}, true);
				}
			}
		}
		
		//点击节点前
		function beforeNodeClick(treeId, node) { 
			if (node.isParent) {
				if (node.level === 0) {
					if(node.children.length == 0){
						return false;
					}
					var pNode = curMenu;
					while (pNode && pNode.level !==0) {
						pNode = pNode.getParentNode();
					}
					if (pNode !== node) {
						var a = $("#" + pNode.tId + "_a");
						a.removeClass("cur");
						zTree_Menu.expandNode(pNode, false);
					}else{
						//打开/关闭节点
						//zTree_Menu.expandNode(pNode, !pNode.open);
					}
					a = $("#" + node.tId + "_a");
					a.addClass("cur");

					var isOpen = false;
					for (var i=0,l=node.children.length; i<l; i++) {
						if(node.children[i].open) {
							isOpen = true;
							break;
						}
					}
					if (isOpen) {
						zTree_Menu.expandNode(node, true);
						curMenu = node;
					} else {
						zTree_Menu.expandNode(node.children[0].isParent?node.children[0]:node, true);
						curMenu = node.children[0];
					}
				} else {
					zTree_Menu.expandNode(node, true, false, false, true);
				}
			}
			//return !node.isParent;
			return true;
		}
		function clearEdit(){
      		try{
      			$("#note_new").val("+ 新建条目");
  			$("#noteTitleField").val("");
  			$("#noteForm_tagId").val("");
  			$("#noteForm_id").val("");
  			if($("#note_editor").length>0){
  				UE.getEditor("note_editor").setContent("");
  	  			UE.getEditor("note_editor").sync("noteForm");
  	  			disableEditNote();
  	  			}
  	  		$("#comments_div").hide();
  	  		$("#saveNote_btn").hide();
  	  		 $("#searchNoteField").val('');
			 $("#noteOrderField").val('');
			 $("#note_subjectId").val('');
			$("#note_dirId").val('');
			$("#note_tagId").val('');
			
  			$("#note_edit").val("编辑条目");
  			$("#note_edit").attr("disabled", "disabled");
			//重置附件
  	    	$('#attachment').hide();
  	    	$('#currAttachment1').html('');
  	    	//重置标签
  	    	$('#tagSelectNode').html("");
      		}catch(e){
      			
      		}
  			
  	    	//重置专题编辑区域======================end=======================
		}
		
		//用来判断是否是专题下的第一个节点
		function getFirstNode(node) {
		    return (node.level == 2 && node.name.indexOf("test")>-1);
		}

		//树节点click事件
		function onNodeClick(e, treeId, node) {
			clearEdit();
			if(node.dataType == "MSG"){   //消息中心
				var msgType = "";
				var dataId = node.id;
				if(dataId == '<%=Constants.MSG_NODEID_SYS %>'){
					msgType = '<%=Constants.MSG_SYSTEM_TYPE %>';
				}
				if(dataId == '<%=Constants.MSG_NODEID_U %>'){
					msgType = '<%=Constants.MSG_USER_TYPE %>';
				} 
				//默认选中未读信息
				if(msgType==''){
					var parentNode = zTree_Menu.getNodeByParam("id", "<%=Constants.MSG_NODEID_NR%>", zTree_Menu.getNodes()[2]);
					zTree_Menu.selectNode(parentNode);
				}
				var url = "${webRoot}/messageController/front/messageList.dht?pageNo=1&pageSize=20&msgType=" + msgType;
				AT.load("iframepage",url,function() {});
			}else if(node.dataType == "SUBJECT"){   //专题条目检索
				//-1：个人专题    -2
				var subjectId = (node.id == '-1' || node.id == '-2') ? curMenu.children[0].id : node.id;
				if(node!=null&&node.name=="多人专题"){
					zTree_Menu.selectNode(node.children[0]);
					node=node.children[0];
					subjectId = node.id;
				}
				if(node!=null&&node.name=="个人专题"){
					zTree_Menu.selectNode(node.children[0]);
					node=node.children[0];
					subjectId = node.id;
				}
				$("#note_subjectId").val(subjectId);
				$("#note_tagId").val("");
				$("#tagSelect").val("");
				$("#note_dirId").val(""); 
				$("#noteForm_dirId").val(""); 
				searchNotes(0,node);
			}else if(node.dataType == "DIRECTORY"&&!isDocumentFolder(node)){   //专题条目检索
				var subjectId = node.subjectId;
				var dirId = node.id.replace("_deleted", "");  // 回收站中的目录ID都加了 _deleted后缀
				var isDeleted = 0;
				if(node.branchId != 'RECYCLEP' && node.branchId != 'RECYCLE'){
					var nodes = zTree_Menu.getNodesByParam("dataType", "DIRECTORY", node);
					var ids = [];
					ids[0] = node.id;
					for(var i = 0; i < nodes.length; i++){
						ids[i + 1] = nodes[i].id;
					}
					$("#note_dirId").val(ids.join(","));
				}else{
					$("#note_dirId").val(dirId);
					isDeleted = 1;   // 查询回收站条目
				}
				if(node.branchId != 'RECYCLEP'){
					$("#note_subjectId").val(subjectId);	  // 搜索form
				}
				$("#noteForm_subjectId").val(subjectId);  // 添加条目FORM中
				
				//添加条目不添加到这几个内置目录
				if(node.name != '<%=Constants.SUBJECT_DOCUMENT_DIRNAME%>'){
					$("#noteForm_dirId").val(dirId);  // 添加条目FORM中
					//条目位置
					var noteDirName ="";
					noteDirName=recurParentName(node,noteDirName);
					$("#noteSubjectName").text(noteDirName);
					searchNotes(isDeleted);
				}
				buttonStatus(node);
			}else if(node.dataType == 'RECYCLEP' || node.dataType == 'RECYCLE'){
				
				var nodes = zTree_Menu.getNodesByParam("dataType", "DIRECTORY", node);
				var parentNode = node.getParentNode();
				var subjectId;				
				if(node.dataType == 'RECYCLEP'){
					subjectId = ""; //个人回收，包括所有个人专题
				}else{
					subjectId = parentNode.id;
				}
				$("#note_subjectId").val(subjectId);      // 搜索Form
				
				var ids = [];
				ids[0] = node.id.replace("_deleted", "");
				for(var i = 0; i < nodes.length; i++){
					ids[i + 1] = nodes[i].id.replace("_deleted", "");
				}
				$("#note_dirId").val(ids.join(","));
				//条目位置
				var noteDirName ="";
				noteDirName=recurParentName(node,noteDirName);
				$("#noteSubjectName").text(noteDirName);
				searchNotes(1);
				
			}
			//处理文档类
			if(isDocumentFolder(node)){ 
				currentSubjectId = currentSubjectId==null?node.subjectId:currentSubjectId;
				currentDirId = node.id; 
				dirAttachmentManage();
			}
			
			//添加目录
			if(node.id == "addDirectory"){
				var parentNode = node.getParentNode();
				var newNode = {id:"",name:"新目录",icon:"${imgPath}/tree/folder.png"};
				newNode = zTree_Menu.addNodes(parentNode, newNode, true);
				zTree_Menu.editName(newNode[0]);
			}
			//选择专题树下的标签时查询当前标签下的数据
			if(node.dataType == "TAG"){
				 if(node.name!='我的标签'){
					 $("#note_tagId").val(node.id);
				 }
				 $("#note_subjectId").val(node.subjectId);
				searchNotes(); 
			}
		} 
		// 判断权限， 按钮是否可用
		function buttonStatus(node){
			var subjectNode = isShareSubject(node);
			if(subjectNode != null){
				var url = "${webRoot}/indexController/front/subjectPermission.dht?subjectId=" + subjectNode.id;
				AT.get(url, function(data){
					data = data[subjectNode.id];
					if(data.ADD_NOTE == 'true'){
						$("#note_new").removeAttr("disabled");
					}else{
						$("#note_new").attr("disabled", "disabled");
					}
					if(data.UPDATE_NOTE == 'true'){
						$("#note_edit").show();
						$("#historyNote_btn").show();
					}else{
						$("#note_edit").hide();
						$("#historyNote_btn").hide();
					}
					if(data.DELETE_NOTE == 'true'){
						$("#deleteNote_btn").show();
					}else{
						$("#deleteNote_btn").hide();
					}
				}, false);
			}
		}
		
		// 每个专题下添加“新建目录”节点
		function addDirNode(){
			var nodes = zTree_Menu.getNodesByFilter(findSubjectNode);
			for(var i = 0; i < nodes.length; i++){
				if(nodes[i].getParentNode().id == "<%=Constants.SUBJECT_PID_P%>"){
					var newNode = {id:"addDirectory",name:"新建目录",icon:"${imgPath}/tree/page_add.png"};
					newNode = zTree_Menu.addNodes(nodes[i], newNode, true);
				}else{
					// 判断是否有添加目录权限
					var url = "${webRoot}/indexController/front/subjectPermission.dht?subjectId=" + nodes[i].id;
					AT.get(url, function(json){
						for(var key in json){
							var sNode = zTree_Menu.getNodeByParam("id", key, null);
							var data = json[key];
							if(data.ADD_DIRECTORY == 'true'){
								var newNode = {id:"addDirectory",name:"新建目录",icon:"${imgPath}/tree/page_add.png"};
								newNode = zTree_Menu.addNodes(sNode, newNode, true);
							}
						}
						
					}, false);
				}
			}
		}

		//打开页面 加载树
		$(document).ready(function(){
			rightMenu = $("#treeRightMenu").html();
			buildMainMenu(true,true,'');
		});
		
		
		
		//构造左边整棵树
		function buildMainMenu(loadfirst,fristopen,subjectid){
			var callbackFlag = false;
			if(zTree_Menu!=null){
				var nodes2 = zTree_Menu.getNodes();
				for(var i = 0; i < nodes2.length; i ++){
					zTree_Menu.removeNode(nodes2[i]);
				}
				zTree_Menu.destroy();
			}
			$.fn.zTree.destroy("treeMenu");
			var url = "${webRoot}/indexController/front/treeMenu.dht";
			AT.post(url, null, function(data){
				$("#treeMenu").html("");
				$.fn.zTree.init($("#treeMenu"), treeSetting, data);
				zTree_Menu = $.fn.zTree.getZTreeObj("treeMenu");
				var nodes = zTree_Menu.getNodes();
				if(nodes.length > 3){
					for(var i = 0; i < nodes.length; i ++){
						//一级节点不能是以下数据类型
						if(nodes[i].dataType == 'DIRECTORY' || nodes[i].dataType == 'TAG'){
							zTree_Menu.removeNode(nodes[i]);
						}
					}
				}
				if(fristopen==true){
					curMenu = nodes[0];
				}else{
				    curMenu = nodes[1];
				}
				
				zTree_Menu.selectNode(curMenu, true);
				zTree_Menu.expandNode(curMenu, null, null, null, callbackFlag);
				var a = $("#" + curMenu.tId + "_a");
				a.addClass("cur");
				
				/* 计算消息数量 */
				countMessage();
				/* 新建目录 */
				addDirNode();
				if(subjectid!=''){
				var subjectNode=zTree_Menu.getNodesByParam("id", subjectid, curMenu);
				zTree_Menu.selectNode(subjectNode[0]);
				}else{
				zTree_Menu.selectNode(curMenu.children[0]);
				}
				
				if(loadfirst){
					beforeNodeClick("treeMenu",curMenu.children[0]);
					onNodeClick(null,"treeMenu",curMenu.children[0]);
				}
			});
		}
		/* 计算消息数量 */
		function countMessage(){
			AT.get("${webRoot}/indexController/front/messageCount.dht",function(json){
				//消息中心count、
				
				if(json.totalCount !=0){
					$("#" + zTree_Menu.getNodes()[2].tId + "_a").find(".numb").remove();
					$("#" + zTree_Menu.getNodes()[2].tId + "_a").append('<span id="noReadMsgNum" class="numb">'+ json.totalCount +'</span>');
				}else{
					$("#" + zTree_Menu.getNodes()[2].tId + "_a").find(".numb").remove();
				}
				//未读消息count
				var parentNode = zTree_Menu.getNodeByParam("id", "<%=Constants.MSG_NODEID_NR%>", zTree_Menu.getNodes()[2]);
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_span").remove();
				if(json.totalCount !=0){
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","未读消息("+json.totalCount+")");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">未读消息('+ json.totalCount +')</span>');
				}else{
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","未读消息");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">未读消息</span>');
				}
				//系统消息count
				parentNode = zTree_Menu.getNodeByParam("id", "<%=Constants.MSG_NODEID_SYS%>", zTree_Menu.getNodes()[2]);
				$("#" + parentNode.tId).find("#"+parentNode.tId + "_span").remove();
				if(json.sysMsgCount !=0){
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","系统消息("+json.sysMsgCount+")");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">系统消息('+ json.sysMsgCount +')</span>');
				}else{
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","系统消息");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">系统消息</span>');
				}
				//用户消息count
				parentNode = zTree_Menu.getNodeByParam("id", "<%=Constants.MSG_NODEID_U%>", zTree_Menu.getNodes()[2]);
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_span").remove();
				if(json.userCount !=0){
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","用户消息("+json.userCount+")");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">用户消息('+ json.userCount +')</span>');
				}else{
					$("#" + parentNode.tId).find("#"+parentNode.tId + "_a").attr("title","用户消息");
					$("#"+parentNode.tId + "_a").append('<span id="'+parentNode.tId+'_span">用户消息</span>');
				}
			},false);
			
		}
		
		//查询专题节点,只取专题节点
		function findSubjectNode(node){
			if((node.pId == '<%=Constants.SUBJECT_PID_P%>' || node.pId == '<%=Constants.SUBJECT_PID_M%>') && node.dataType == 'SUBJECT'){
				return true;					
			}else{
				return false;
			}
		}
		
		//鼠标页面点击事件
		function onBodyClick(event) {
			if (event.target.id != "treeRightMenu" && $(event.target).parents("#treeRightMenu").attr("id") != "treeRightMenu") {
				hideRightMenu();
			}
		}
		
		//右键菜单关闭方法
		function hideRightMenu(){
			$("#treeRightMenu").hide();
			$("#treeRightMenu_ul_directory").show();
			$("#treeRightMenu_ul_subject").show();
			$("#treeRightMenu_ul_tag").show();
			rightClickNode = null;
			$("body").unbind("mousedown", onBodyClick);
		}
		//右键菜单增加目录、子目录
		function addChildDir(){
			var subjectId = rightClickNode.id;
			if(rightClickNode.dataType == "DIRECTORY"){
				subjectId = rightClickNode.subjectId;
			}
			var newNode = {id:"",name:"新目录",icon:"${imgPath}/tree/folder.png",dataType:"DIRECTORY",subjectId:subjectId};
			newNode = zTree_Menu.addNodes(rightClickNode, newNode);
			hideRightMenu();
			zTree_Menu.editName(newNode[0]);
		}
		
		//右键菜单增加标签
		function addChildTag(){
			var newNode = {id:"",name:"新标签",icon:"${imgPath}/tree/tag_blue.png"};
			newNode = zTree_Menu.addNodes(rightClickNode, newNode);
			hideRightMenu();
			zTree_Menu.editName(newNode[0]);
		}
		
		//设置目录黑名单
		function blackListdir(obj,obj2){
			var params = {'subjectId':obj2,'directoryId':obj};
			 AT.post("${webRoot}/directoryController/front/blackListDirectory.dht",params,function(data){
				 easyDialog.open({
						container : {
							header : '<img src="${imgPath}/mail_blue.png" height="23"  >',
							content : data
						},
						follow : 'note_share',
						followX : -500,
						followY : 79
					}); 
			});
			hideRightMenu();
			}

		//分页
		function doPageblackDirectoryList(ths,pageNo,pageSize){
			 AT.post("${webRoot}/directoryController/front/blackListDirectory.dht",$("#blackListDirectoryForm").serialize(),function(data){
				 easyDialog.open({
						container : {
							header : '<img src="${imgPath}/mail_blue.png"  height="23"  >',
							content : data
						},
						follow : 'note_share',
						followX : -98,
						followY : 34
					}); 
			});
		}
		
		function addBlackListDirectory(userId,directoryId,obj){
			var params = {'userId':userId,'directoryId':directoryId};
			
		    if(confirm("确定将此用户"+obj.value+"?")){
			 AT.post("${webRoot}/directoryController/front/addblackListDirectory.dht",params,function(data){
					if(data.success){
						 MSG.alert(data.msg);
						 var k=obj.value;
						 if(k=='移除黑名单'){
							 obj.value='加入黑名单';
							 }else{
								 obj.value='移除黑名单';
								 }
					}else{
						 MSG.alert(data.msg);
					}	
			});
		    }
		}
		
		//右键菜单重名命
		function renameNode(){
		    rightClickNode.name=rightClickNode.title;
			zTree_Menu.editName(rightClickNode);
			hideRightMenu();
		}
		//右键菜单删除
		function deleteNode(){
			var msg = "";
			var url = "";
			var dataParam = "id=" + rightClickNode.id;
			var subjectId = rightClickNode.subjectId;
			var dataType = rightClickNode.dataType;
			
			if(dataType == "SUBJECT"){
			    if(rightClickNode.name=='默认专题'){
			       MSG.alert('默认专题不能删除');
			       hideRightMenu();
			      return;
			    }
				subjectId = rightClickNode.id;
				msg = "确认要删除此专题吗？此操作不可恢复！";
				url = "${webRoot}/subjectController/front/deleteSubject.dht?subjectId=" + subjectId;
			}
			
			if(dataType == "DIRECTORY"){ //目录节点
				//回收站中的目录
				if(rightClickNode.name != '<%=Constants.SUBJECT_RECYCLE_DIRNAME%>' && (rightClickNode.branchId == "RECYCLE" || rightClickNode.branchId == "RECYCLEP")){ //回收站节点
					msg = "确认要彻底删除此目录吗？";
					url = "${webRoot}/directoryController/front/truncateDirectory.dht";
				}else{  //普通目录，刷新回收站
					msg = "确认要删除此目录吗？";
					url = "${webRoot}/directoryController/front/delDirectory.dht";
				}
			}
			
			if(dataType == "TAG"){ //标签节点
				msg = "确认要删除此标签吗？";
				url = "${webRoot}/tagController/front/deleteTag.dht";
			}
			
			if(window.confirm(msg)){ 
				zTree_Menu.removeNode(rightClickNode);
				AT.post(url, dataParam, function(data){
					if(dataType == "SUBJECT"){
						var parentNode = zTree_Menu.getNodeByParam("id", subjectId, null);
					}
					if(dataType == "DIRECTORY"){ //目录节点
						var parentNode = zTree_Menu.getNodeByParam("id", subjectId, null);
						var rn = zTree_Menu.getNodeByParam("name", '<%=Constants.SUBJECT_RECYCLE_DIRNAME%>', parentNode);
						// 刷新个人专题回收站节点
						if(rn == null){
							parentNode = zTree_Menu.getNodeByParam("id", "recycle_personal", null);
							parentNode.isParent = true;
							zTree_Menu.reAsyncChildNodes(parentNode, "refresh", true);
						}else{  // 刷新某多人专题下的回收站节点
							parentNode = zTree_Menu.getNodeByParam("id", "recycle_subject_" + subjectId, null);
							parentNode.isParent = true;
							zTree_Menu.reAsyncChildNodes(parentNode, "refresh", true);
						}
					}
					
				}, true);
				
			}
			hideRightMenu();
		}

		//专题管理跳转
		function subjectManage(){
			url = "${webRoot}/subjectController/front/subjectManage.dht?pageNo=1&pageSize=20";
			AT.load("iframepage",url,function() {});
			hideRightMenu();
		}
		
		//专题添加跳转
		function toAddSubject(){
			url = "${webRoot}/subjectController/front/viewAddSubject.dht";
			AT.load("iframepage",url,function() {});	
			hideRightMenu();
		}
	
		//条目附件管理跳转
		function dirAttachmentManage(){ 
			url = currentdirAttachmentURL+"?dirId=" +currentDirId  + "&subjectId=" + currentSubjectId;
			AT.load("iframepage",url,function() {});
		} 
		//还原目录
		function restoreDirectory(){
			var url = "${webRoot}/directoryController/front/restoreDirectory.dht";
			var dataParam = "id=" + rightClickNode.id;
			var subjectId = rightClickNode.subjectId;
			zTree_Menu.removeNode(rightClickNode);
			hideRightMenu();
			AT.post(url, dataParam, function(data){
				var parentNode = zTree_Menu.getNodeByParam("id", subjectId, null);
				zTree_Menu.reAsyncChildNodes(parentNode, "refresh", true);
			}, true);
		}
		//清空回收站
		function deleteChildNodes(){
			var subjectId = rightClickNode.subjectId;
			var dataParam = "id=" + rightClickNode.id + "&subjectId=" + subjectId;
			msg = "确认要清空回收站所有数据吗？";
			url = "${webRoot}/directoryController/front/truncateAll.dht";
			if(window.confirm(msg)){
				AT.post(url, dataParam, function(data){
					zTree_Menu.reAsyncChildNodes(rightClickNode, "refresh", true);
					hideRightMenu();
				}, true);
			}
		}
		
		//条目搜索事件
		function searchNotes(deleted,node){
			if(deleted){
				deleted = 1;
			}else{
				deleted = 0;
			}
			if(deleted == 0){
				$('#saveNote_btn').hide();
  				$("#restoreNote_btn").hide();
			}else{
				$('#saveNote_btn').hide();
  				$("#note_edit").hide();
  				$("#restoreNote_btn").show();
  				$("#historyNote_btn").hide();
  				$('#attachment').hide();
  				$('#comments_div').hide();
			}
			var input = $("#searchNoteField").val();
			var orderField = $("#noteOrderField").val();
			var subjectId = $("#note_subjectId").val();
			var dirId = $("#note_dirId").val();
			var tagId = $("#note_tagId").val();
			if(!input){
				input = '';
			}
			input = encodeURIComponent(input);
			if(!orderField){
				orderField = '';
			}
			
			if(!subjectId){
				subjectId = '';
			}
			if(!dirId){
				dirId = '';
			}
			if(!tagId){
				tagId = '';
			}
			var frmId = "";
			if(!!$("#noteListIframe").attr("id")){
				frmId = "noteListIframe";
				url = "${webRoot}/noteController/front/noteList.dht?pageNo=1&pageSize=20&subjectId=" + subjectId + "&dirId=" + dirId + "&searchInput=" + input + "&orderField=" + orderField + "&tagId=" + tagId + "&deleted=" + deleted;
			}else{
				frmId = "iframepage";
				url = "${webRoot}/noteController/front/noteIndex.dht?pageNo=1&pageSize=20&subjectId=" + subjectId + "&dirId=" + dirId + "&searchInput=" + input + "&orderField=" + orderField + "&tagId=" + tagId;
			}
			AT.load(frmId,url,function(){
				if(node){
					var nodes = zTree_Menu.getNodesByParam("dataType", "DIRECTORY", node);
					$("#note_subjectId").val(subjectId);      // 搜索Form
					$("#noteForm_subjectId").val(subjectId);  // 添加条目FORM中
					$("#noteForm_dirId").val('');

					//条目位置
					//var subjectName = (node.id == '-1' || node.id == '-2') ? curMenu.children[0].name + "/" : node.name + "/";
					var subjectName ="";
					subjectName=recurParentName(node,subjectName);
					$("#noteSubjectName").text(subjectName);
					$("#noteDirName").text("");
					buttonStatus(node);
				}
				
				if($("#firstNodeId").val()==null||$("#firstNodeId").val()==''){
     				$("#note_edit").hide();
     				$("#note_share").hide();
     				$("#note_blacklist").hide();
     			}else{
     				viewNote($("#firstNodeId").val(),true);
     			}
			});
		}

		function recurParentName(node,subjectName){
			if(node.id != '-1'&&node.id != '-2'){
					subjectName =node.name + "/"+subjectName;
					return recurParentName(node.getParentNode(),subjectName);
				}else{
					subjectName =node.name + "/"+subjectName;
					return subjectName;
				}
			}
		
		function isShareSubject(node){
			if(node.level == 0 && node.id == '<%=Constants.SUBJECT_PID_P%>'){
				return null;
			}
			
			if(node.level == 0 && node.id == '<%=Constants.SUBJECT_PID_M%>'){
				return node.children[0];
			}
			var subjectNode = null;
			if(node.dataType == 'SUBJECT'){
				subjectNode = node;
			}else if(node.dataType == 'DIRECTORY'){
				//查找专题节点
				var subjectId = node.subjectId;
				subjectNode = zTree_Menu.getNodeByParam("id", subjectId, null);
			}else if(node.dataType == 'RECYCLE'){
				subjectNode = node.getParentNode();
			}else{
				return null;
			}
			
			if(subjectNode != null){
				var rNode = subjectNode.getParentNode();
				
				if(rNode.id == '<%=Constants.SUBJECT_PID_P%>'){
					return null;  //个人专题
				}else{
					return subjectNode; // 多人专题返回专题节点
				}
			}
		}
		
		//获取标签过滤使用的标签数据
		function queryTagData(parentNode){
			if(parentNode==null){
				return;
			}
			var nodes = null;
			if(parentNode.id == "tag_personal"){
				nodes = zTree_Menu.getNodesByFilter(findPersonTagNode);
			}else if(parentNode.id!=null&&parentNode.id.indexOf("tag_subject")!=-1){
				nodes = zTree_Menu.getNodesByParam("branchId", parentNode.branchId, parentNode);
				//nodes = zTree_Menu.getNodesByFilter(findShareTagNode);
			}
			if(nodes != null && nodes.length > 0){
				return nodes;
			}else{
				return null;
			}
		}
		
		//查询个人标签节点
		function findPersonTagNode(node){
			var nodes = node.children;
			if(nodes != null){
				if(node.branchId == "tag_personal"){
					return true;
				}
			}
			return false;
		}
		
		//查询专题标签节点
		function findShareTagNode(node){
			var nodes = node.children;
			if(nodes != null){
				if(node.dataType == "TAG" && node.branchId != "tag_personal" && node.id != "tag_personal" && node.id.indexOf("tag_subject")==-1){
					return true;
				}
			}
			return false;
		}
		var tagTreeSetting = {
				view : {
					dblClickExpand : false,
					nameIsHTML: false
				},
				data : {
					simpleData : {
						enable : true
					}
				},
				callback : { 
					onClick : onTagClick
				}
			}; 
			//点击标签事件
			function onTagClick(){
				var zTree = $.fn.zTree.getZTreeObj("tagTree");
				var nodes = zTree.getSelectedNodes();
				var v = nodes[0].name;
				var tagObj = $("#tagSelect");
				tagObj.attr("value", v);
				
				//找到所有叶标签
				var leafNodes = [];
				if(!nodes[0].isParent){
					leafNodes[0] = nodes[0];
				}else{
					leafNodes = zTree.getNodesByParam("isParent", false, nodes[0]);
				}
				var tagIds = [];
				for (var i=0, l=leafNodes.length; i<l; i++) {
					tagIds[i] = leafNodes[i].id;
				}
				
				$("#note_tagId").val(tagIds.join(","));
				searchNotes();
				hideM();
			}
			
		//-->
	</script>
</head>
<body style="width: auto;min-width: 1024px;"> 
<!-- Begin header-->
<%@ include file="./include/head.jsp"%>
<!-- End header--> 

<!-- Begin mainer-->
<div class="mainer" id="page_mainer">
  <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
      <td valign="top" class="Directory" id="treeMenu_td" style="padding-top: 0px;">
        <div class="items">
        	<ul id="treeMenu" class="ztree"></ul>
        	<div class="rightMenu" id="treeRightMenu">
        		<ul id="treeRightMenu_ul_subject">
       				<li id="treeRightMenu_add_dir" onclick="addChildDir()">添加目录</li>
       				<li id="treeRightMenu_manage_subject" onclick="toAddSubject()">新建专题</li>
       				<li id="treeRightMenu_delete_subject" onclick="deleteNode()">删除</li>
        		</ul>
        		<ul id="treeRightMenu_ul_directory">
       				<li id="treeRightMenu_add_subdir" onclick="addChildDir()">添加子目录</li>
       				<li id="treeRightMenu_rename_dir" onclick="renameNode()">重命名</li>
       				<li id="treeRightMenu_delete_dir" onclick="deleteNode()">删除</li>
        		</ul>
        		<ul id="treeRightMenu_ul_attachment">
					<li id="treeRightMenu_add_attadir" onclick="addChildDir()">添加子目录</li>
					<li id="treeRightMenu_rename_attadir" onclick="renameNode()">重命名</li>
					<!-- <li id="treeRightMenu_add_attachment" onclick="dirAttachmentManage()">上传文档</li> -->
					<li id="treeRightMenu_delete_attadir" onclick="deleteNode()">删除</li>
				</ul>
        		<ul id="treeRightMenu_ul_tag">
       				<li id="treeRightMenu_add_tag" onclick="addChildTag()">添加标签</li>
       				<li id="treeRightMenu_rename_tag" onclick="renameNode()">修改标签</li>
       				<li id="treeRightMenu_delete_tag" onclick="deleteNode()">删除</li>
        		</ul>
        		<ul id="treeRightMenu_ul_recycle">
       				<li id="treeRightMenu_restore" onclick="restoreDirectory()">还原</li>
       				<li id="treeRightMenu_delete" onclick="deleteNode()">删除</li>
        		</ul>
        		<ul id="treeRightMenu_ul_recycleRoot">
    				<li id="treeRightMenu_deleteAll" onclick="deleteChildNodes()">清空回收站</li>
        		</ul>
        	</div>
        </div>
        
        </td>
      <td class="Fold">
        <a href="#" onclick="hideTreeMenu()"><img id="hideTree_img" src="<%=imgPath %>/button_fold.png" width="8" height="110" /></a>
      </td>
      <input type="hidden" name="subjectId" id="note_subjectId" value=""/>
      <td id="iframepage" valign="top" class="mainer_right" style="height:500px">
        <!-- Begin mainer_index-->
        <!-- End mainer_index-->
        </td>
    </tr>
  </table>
  <!-- Begin footer-->
<!-- End footer-->
</div>
<!-- End mainer--> 
<jsp:include page="./include/footer.jsp" />
<script type="text/javascript">
	function hideTreeMenu(){
		$("#treeMenu_td").toggle();
		var rect = $("#treeMenu_td")[0].getBoundingClientRect();;
		var isVisible = !!(rect.bottom - rect.top);
		if(isVisible){
			$("#hideTree_img").attr("src", "${imgPath}/button_fold.png");
		}else{
			$("#hideTree_img").attr("src", "${imgPath}/button_fold2.png");
		}
	}
</script>
</body>
</html>
